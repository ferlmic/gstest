# Test coverage workflow using GitHub Gist for the coverage badge. 
# Source: https://dev.to/thejaredwilcurt/coverage-badge-with-github-actions-finally-59fa
# 
# Compared with other (widespread) approaches on GitHub:
# - Disadvantage: full coverage report not available (not hosted anywhere)
# - Advantages (tied to the disadvantage mentioned above): 
#   - Does not use 3rd party services (e.g., Codecov.io) to host the coverage report
#   - Does not use GitHub Pages to host the full report (important since Pages is 
#     already used for the package website)
#
# Source for the badge colors (in step "Test Coverage"): 
# https://docs.gitlab.com/user/project/badges/#test-coverage-limits-and-badge-colors
#
# NOTE: this is similar to what we currently do in GitLab, i.e.,:
#   - coverage badge in the README file (with the same color scale)
#   - coverage percentages for the package (overall coverage) and individual R scripts 
#     available in the pipeline job (text) log.

name: Test Coverage - Gist

on:
  push:
    branches: [main]
  # Allow a manual run of the workflow
  workflow_dispatch:

permissions: read-all

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr, any::xml2
          needs: coverage

      - name: Test coverage
        run: |
          cov <- covr::package_coverage(
            type = "tests",  # unit tests only
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(normalizePath(Sys.getenv("RUNNER_TEMP"), winslash = "/"), "package")
          )
          print(cov)
          pkg_cov <- covr::percent_coverage(cov)
          if (pkg_cov > 95) {
            cov_col <- "#4c1"         # green
          } else if (pkg_cov > 90) {
            cov_col <- "#a3c51c"      # yellowish green
          } else if (pkg_cov > 75) {
            cov_col <- "#dfb317"      # yellow
          } else {
            cov_col <- "e05d44"       # red
          }
          writeLines(
            paste0(
              'echo "COVERAGE=', format(pkg_cov, digits = 4), '%" >> $GITHUB_ENV\n', 
              'echo "COVERAGE_COLOR=', cov_col, '" >> $GITHUB_ENV\n'
            ),
            "./set_env_var.sh"
          )
        shell: Rscript {0}

      - name: Set environment variables
        working-directory: ${{ github.workspace }}
        run: bash ./set_env_var.sh

      - name: Create coverage badge
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: d1c44251dc166a6148015f7414a0ed1a
          filename: gstest_coverage.json
          label: coverage
          message: ${{ env.COVERAGE }}
          color: ${{ env.COVERAGE_COLOR }}

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find '${{ runner.temp }}/package' -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package
