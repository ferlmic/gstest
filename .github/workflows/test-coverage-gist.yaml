# Test coverage workflow using Gist for the coverage. 
# Source: https://dev.to/thejaredwilcurt/coverage-badge-with-github-actions-finally-59fa
# 
# Compared isons with other (widespread) approaches:
# - Disadvantage: full coverage report not available (not hosted anywhere)
# - Advantages: 
#   - Does not use 3rd party service website (e.g., Codecov.io) to host the coverage report
#   - Does not use GitHub Pages to hostdisplay the full report (we need it for the package website)

name: Test Coverage - Gist

on:
  # push:
  #   branches: [main, master]
  # Allow a manual run of the workflow
  workflow_dispatch:

permissions: read-all

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr, any::xml2
          needs: coverage

      - name: Test coverage
        run: |
          cov <- covr::package_coverage(
            type = "tests",  # unit tests only
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(normalizePath(Sys.getenv("RUNNER_TEMP"), winslash = "/"), "package")
          )
          print(cov)
          pkg_cov <- covr::percent_coverage(cov)
          if (pkg_cov > 75) {
            cov_col <- "green"
          } else if (pkg_cov > 50) {
            cov_col <- "yellow"
            Sys.setenv(R_COVERAGE_COLOR = "yellow")  
          } else {
            cov_col <- "red"
          }
          writeLines(
            paste0(
              'echo "COVERAGE=', format(pkg_cov, digits = 4), '%" >> $GITHUB_ENV\n', 
              'echo "COVERAGE_COLOR=', cov_col, '" >> $GITHUB_ENV\n'
            ),
            "./set_env_var.sh"
          )
        shell: Rscript {0}

      - name: Set environment variables
        working-directory: ${{ github.workspace }}
        run: bash ./set_env_var.sh

      - name: Create coverage badge
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: d1c44251dc166a6148015f7414a0ed1a
          filename: gstest_coverage.json
          label: coverage
          message: ${{ env.COVERAGE }}
          color: ${{ env.COVERAGE_COLOR }}
          # message: pkg-pct
          # color: yellow

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find '${{ runner.temp }}/package' -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package
