% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unstack_tsDF.R
\name{unstack_tsDF}
\alias{unstack_tsDF}
\title{Fonction réciproque de \code{\link[=stack_tsDF]{stack_tsDF()}}}
\usage{
unstack_tsDF(
  ts_df,
  ser_cName = "series",
  yr_cName = "year",
  per_cName = "period",
  val_cName = "value"
)
}
\arguments{
\item{ts_df}{(obligatoire)

\emph{Data frame}, ou objet compatible, contenant les données de séries chronologiques multivariées à \emph{désempiler}.}

\item{ser_cName}{(optionnel)

Chaîne de caractères spécifiant le nom de la variable (colonne) dans le \emph{data frame} d'entrée qui contient le nom des
séries chronologiques (nom des variables des séries chronologiques dans le \emph{data frame} de sortie).

\strong{La valeur par défaut} est \code{ser_cName = "series"}.}

\item{yr_cName, per_cName}{(optionnel)

Chaînes de caractères spécifiant le nom des variables (colonnes) numériques dans le \emph{data frame} d'entrée qui identifient
l'année et la période des points de données. Ces variables sont \emph{transférées} dans le \emph{data frame} de sortie avec les mêmes
noms de variable.

\strong{Les valeurs par défaut} sont \code{yr_cName = "year"} et \code{per_cName = "period"}.}

\item{val_cName}{(optionnel)

Chaîne de caractères spécifiant le nom de la variable (colonne) numérique dans le \emph{data frame} d'entrée qui contient
la valeur des points de données.

\strong{La valeur par défaut} est \code{val_cName = "value"}.}
}
\value{
La fonction renvoie un \emph{data frame} avec trois variables ou plus :
\itemize{
\item Année du point de données, type numérique (voir argument \code{yr_cName})
\item Période du point de données, type numérique (voir argument \code{per_cName})
\item Une variable de données de série chronologique pour chaque valeur distincte de la variable du \emph{data frame} d'entrée
spécifiée avec l'argument \code{ser_cName}, type numérique (voir arguments \code{ser_cName} et \code{val_cName})
}

Note : la fonction renvoie un objet « data.frame » qui peut être explicitement converti en un autre
type d'objet avec la fonction \verb{as*()} appropriée (ex., \code{tibble::as_tibble()} le convertirait en tibble).
}
\description{
Convertir un \emph{data frame} empilé (long) de séries chronologiques multivariées (format de données de \code{\link[=benchmarking]{benchmarking()}} et
\code{\link[=stock_benchmarking]{stock_benchmarking()}}) en un \emph{data frame} non empilé (large) de séries chronologiques multivariées.

Cette fonction, combinée avec \code{\link[=tsDF_to_ts]{tsDF_to_ts()}}, est utile pour convertir le \emph{data frame} renvoyé par un appel à
\code{\link[=benchmarking]{benchmarking()}} ou \code{\link[=stock_benchmarking]{stock_benchmarking()}} en un objet « mts », où plusieurs séries ont été étalonnées en mode de
traitement \emph{groupes-BY}.
}
\examples{
# Étalonnage proportionnel pour plusieurs (3) séries trimestrielles traitées avec 
# l'argument `by` (en mode groupes-BY)

vec_ind <- c(1.9, 2.4, 3.1, 2.2, 2.0, 2.6, 3.4, 2.4, 2.3)
df_ind <- ts_to_tsDF(ts(data.frame(ser1 = vec_ind,
                                   ser2 = vec_ind * 100,
                                   ser3 = vec_ind * 10),
                        start = c(2015, 1), frequency = 4))

vec_eta <- c(10.3, 10.2)
df_eta <- ts_to_bmkDF(ts(data.frame(ser1 = vec_eta,
                                    ser2 = vec_eta * 100,
                                    ser3 = vec_eta * 10), 
                         start = 2015, frequency = 1),
                      ind_frequency = 4)

res_eta <- benchmarking(stack_tsDF(df_ind),
                        stack_bmkDF(df_eta),
                        rho = 0.729, lambda = 1, biasOption = 3,
                        by = "series",
                        quiet = TRUE)

# « Data frame » des séries chronologiques initiales et finales (étalonnés)
df_ind
unstack_tsDF(res_eta$series)
}
\seealso{
\code{\link[=stack_tsDF]{stack_tsDF()}} \code{\link[=tsDF_to_ts]{tsDF_to_ts()}} \code{\link[=benchmarking]{benchmarking()}} \code{\link[=stock_benchmarking]{stock_benchmarking()}}
}
