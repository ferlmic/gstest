% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsraking.R
\name{tsraking}
\alias{tsraking}
\title{Rétablir les contraintes d'agrégation transversales (contemporaines)}
\usage{
tsraking(
  data_df,
  metadata_df,
  alterability_df = NULL,
  alterSeries = 1,
  alterTotal1 = 0,
  alterTotal2 = 0,
  alterAnnual = 0,
  tolV = 0.001,
  tolP = NA,
  warnNegResult = TRUE,
  tolN = -0.001,
  id = NULL,
  verbose = FALSE,

  # Nouveau dans G-Séries 3.0
  Vmat_option = 1,
  warnNegInput = TRUE,
  quiet = FALSE
)
}
\arguments{
\item{data_df}{(obligatoire)

\emph{Data frame}, ou objet compatible, qui contient les données des séries chronologiques à réconcilier. Il doit au minimum
contenir des variables correspondant aux séries composantes et aux totaux de contrôle transversaux spécifiés dans le
\emph{data frame} des métadonnées de ratissage (argument \code{metadata_df}). Si plus d'un enregistrement (plus d'une période) est
fournie, la somme des valeurs des séries composantes fournies sera également préservée à travers des contraintes
temporelles implicites.}

\item{metadata_df}{(obligatoire)

\emph{Data frame}, ou objet compatible, qui décrit les contraintes d'agrégation transversales (règles d'additivité) pour le
problème de ratissage (« \emph{raking} »). Deux variables de type caractère doivent être incluses dans le \emph{data frame} :
\code{series} et \code{total1}. Deux variables sont optionnelles : \code{total2} (caractère) et \code{alterAnnual} (numérique). Les valeurs
de la variable \code{series} représentent les noms des variables des séries composantes dans le \emph{data frame} des données
d'entrée (argument \code{data_df}). De même, les valeurs des variables \code{total1} et \code{total2} représentent les noms des variables
des totaux de contrôle transversaux de 1\if{html}{\out{<sup>}}ère\if{html}{\out{</sup>}} et 2\if{html}{\out{<sup>}}ème\if{html}{\out{</sup>}} dimension dans le \emph{data frame} des données
d'entrée. La variable \code{alterAnnual} contient le coefficient d'altérabilité pour la contrainte temporelle associée à
chaque série composante. Lorsqu'elle est spécifiée, cette dernière remplace le coefficient d'altérabilité par défaut
spécifié avec l'argument \code{alterAnnual}.}

\item{alterability_df}{(optionnel)

\emph{Data frame}, ou objet compatible, ou \code{NULL}, qui contient les variables de coefficients d'altérabilité. Elles
doivent correspondre à une série composante ou à un total de contrôle transversal, c'est-à-dire qu'une variable
portant le même nom doit exister dans le \emph{data frame} des données d'entrée (argument \code{data_df}). Les valeurs de
ces coefficients d'altérabilité remplaceront les coefficients d'altérabilité par défaut spécifiés avec les arguments
\code{alterSeries}, \code{alterTotal1} et \code{alterTotal2}. Lorsque le \emph{data frame} des données d'entrée contient plusieurs
enregistrements et que le \emph{data frame} des coefficients d'altérabilité n'en contient qu'un seul, les coefficients
d'altérabilité sont utilisés (répétés) pour tous les enregistrements du \emph{data frame} des données d'entrée. Le
\emph{data frame} des coefficients d'altérabilité peut également contenir autant d'enregistrements que le \emph{data frame}
des données d'entrée.

\strong{La valeur par défaut} est \code{alterability_df = NULL} (coefficients d'altérabilité par défaut).}

\item{alterSeries}{(optionnel)

Nombre réel non négatif spécifiant le coefficient d'altérabilité par défaut pour les valeurs des séries composantes.
Il s'appliquera aux séries composantes pour lesquelles des coefficients d'altérabilité n'ont pas déjà été spécifiés
dans le \emph{data frame} des coefficients d'altérabilité (argument \code{alterability_df}).

\strong{La valeur par défaut} est \code{alterSeries = 1.0} (valeurs des séries composantes non contraignantes).}

\item{alterTotal1}{(optionnel)

Nombre réel non négatif spécifiant le coefficient d'altérabilité par défaut pour les totaux de contrôle transversaux
de la 1\if{html}{\out{<sup>}}ère\if{html}{\out{</sup>}} dimension. Il s'appliquera aux totaux de contrôle transversaux pour lesquels des coefficients
d'altérabilité n'ont pas déjà été spécifiés dans le \emph{data frame} des coefficients d'altérabilité (argument
\code{alterability_df}).

\strong{La valeur par défaut} est \code{alterTotal1 = 0.0} (totaux de contrôle transversaux de 1\if{html}{\out{<sup>}}ère\if{html}{\out{</sup>}} dimension
contraignants).}

\item{alterTotal2}{(optionnel)

Nombre réel non négatif spécifiant le coefficient d'altérabilité par défaut pour les totaux de contrôle transversaux
de la 2\if{html}{\out{<sup>}}ème\if{html}{\out{</sup>}} dimension. Il s'appliquera aux totaux de contrôle transversaux pour lesquels des coefficients
d'altérabilité n'ont pas déjà été spécifiés dans le \emph{data frame} des coefficients d'altérabilité (argument
\code{alterability_df}).

\strong{La valeur par défaut} est \code{alterTotal2 = 0.0} (totaux de contrôle transversaux de 2\if{html}{\out{<sup>}}ème\if{html}{\out{</sup>}} dimension
contraignants).}

\item{alterAnnual}{(optionnel)

Nombre réel non négatif spécifiant le coefficient d'altérabilité par défaut pour les contraintes temporelles
(ex., totaux annuels) des séries composantes. Il s'appliquera aux séries composantes pour lesquelles des
coefficients d'altérabilité n'ont pas déjà été spécifiés dans le \emph{data frame} des métadonnées de ratissage
(argument \code{metadata_df}).

\strong{La valeur par défaut} est \code{alterAnnual = 0.0} (totaux de contrôle temporels contraignants).}

\item{tolV, tolP}{(optionnel)

Nombre réel non négatif, ou \code{NA}, spécifiant la tolérance, en valeur absolue ou en pourcentage, à utiliser
lors du test ultime pour les totaux de contrôle contraignants (coefficient d'altérabilité de \eqn{0.0} pour
les totaux de contrôle temporels ou transversaux). Le test compare les totaux de contrôle contraignants d'entrée
avec ceux calculés à partir des séries composantes réconciliées (en sortie). Les arguments \code{tolV} et \code{tolP} ne
peuvent pas être spécifiés tous les deux à la fois (l'un doit être spécifié tandis que l'autre doit être \code{NA}).

\strong{Exemple :} pour une tolérance de 10 \emph{unités}, spécifiez \verb{tolV = 10, tolP = NA}; pour une tolérance de 1\%,
spécifiez \verb{tolV = NA, tolP = 0.01}.

\strong{Les valeurs par défaut} sont \code{tolV = 0.001} et \code{tolP = NA}.}

\item{warnNegResult}{(optionnel)

Argument logique (\emph{logical}) spécifiant si un message d'avertissement doit être affiché lorsqu'une valeur négative
créée par la fonction dans une série réconciliée (en sortie) est inférieure au seuil spécifié avec l'argument \code{tolN}.

\strong{La valeur par défaut} est \code{warnNegResult = TRUE}.}

\item{tolN}{(optionnel)

Nombre réel négatif spécifiant le seuil pour l'identification des valeurs négatives. Une valeur est considérée
négative lorsqu'elle est inférieure à ce seuil.

\strong{La valeur par défaut} est \code{tolN = -0.001}.}

\item{id}{(optionnel)

Vecteur de chaînes de caractère (longueur minimale de 1), ou \code{NULL}, spécifiant le nom des variables additionnelles
à transférer du \emph{data frame} d'entrée (argument \code{data_df}) au \emph{data frame} de sortie, c.-à-d., l'objet renvoyé par
la fonction (voir la section \strong{Valeur de retour}). Par défaut, le \emph{data frame} de sortie ne contient que les
variables énumérées dans le \emph{data frame} des métadonnées de ratissage (argument \code{metadata_df}).

\strong{La valeur par défaut} est \code{id = NULL}.}

\item{verbose}{(optionnel)

Argument logique (\emph{logical}) spécifiant si les informations sur les étapes intermédiaires avec le temps d'exécution
(temps réel et non le temps CPU) doivent être affichées. Notez que spécifier l'argument \code{quiet = TRUE} annulerait
l'argument \code{verbose}.

\strong{La valeur par défaut} est \code{verbose = FALSE}.}

\item{Vmat_option}{(optionnel)

Spécification de l'option pour les matrices de variance (\eqn{V_e} et \eqn{V_\epsilon}; voir la section \strong{Détails}) :\tabular{cl}{
   \strong{Valeur} \tab \strong{Description} \cr
   \code{1} \tab Utiliser les vecteurs \eqn{x} et \eqn{g} dans les matrices de variance. \cr
   \code{2} \tab Utiliser les vecteurs \eqn{|x|} et \eqn{|g|} dans les matrices de variance. \cr
}


Voir Ferland (2016) et la sous-section \strong{Arguments \code{Vmat_option} et \code{warnNegInput}} dans la section \strong{Détails} pour
plus d'informations.

\strong{La valeur par défaut} est \code{Vmat_option = 1}.}

\item{warnNegInput}{(optionnel)

Argument logique (\emph{logical}) spécifiant si un message d'avertissement doit être affiché lorsqu'une valeur négative
plus petite que le seuil spécifié par l'argument \code{tolN} est trouvée dans le \emph{data frame} des données d'entrée
(argument \code{data_df}).

\strong{La valeur par défaut} est \code{warnNegInput = TRUE}.}

\item{quiet}{(optionnel)

Argument logique (\emph{logical}) spécifiant s'il faut ou non afficher uniquement les informations essentielles telles
que les messages d'avertissements et d'erreurs. Spécifier \code{quiet = TRUE} annulera également l'argument \code{verbose} et
est équivalent à \emph{envelopper} votre appel à \code{\link[=tsraking]{tsraking()}} avec \code{\link[=suppressMessages]{suppressMessages()}}.

\strong{La valeur par défaut} est \code{quiet = FALSE}.}
}
\value{
La fonction renvoie un \emph{data frame} contenant les séries composantes réconciliées, les totaux de contrôle transversaux
réconciliés et les variables spécifiées avec l'argument \code{id}. Notez que l'objet « data.frame » peut être explicitement
converti en un autre type d'objet avec la fonction \verb{as*()} appropriée (ex., \code{tibble::as_tibble()} le convertirait en
tibble).
}
\description{
\emph{Réplication de la procédure TSRAKING de G-Séries 2.0 en SAS\eqn{^\circledR}{®} (PROC TSRAKING).
Voir la documentation de G-Séries 2.0 pour plus de détails (Statistique Canada 2016).}

Cette fonction rétablit les contraintes d'agrégation transversales dans un système de séries chronologiques.
Les contraintes d'agrégation peuvent provenir d'une table à 1 ou 2 dimensions. Optionnellement, des contraintes
temporelles peuvent également être préservées.

En pratique, \code{\link[=tsraking]{tsraking()}} est généralement appelée à travers \code{\link[=tsraking_driver]{tsraking_driver()}} afin de réconcilier toutes
les périodes du système de séries chronologiques en un seul appel de fonction.
}
\details{
Cette fonction renvoie la solution des moindres carrés généralisés d'une variante spécifique, simple du modèle général
de ratissage (\emph{raking}) basé sur la régression proposé par Dagum et Cholette (Dagum et Cholette 2006). Le modèle,
sous forme matricielle, est le suivant :
\deqn{\displaystyle
\begin{bmatrix} x \\ g \end{bmatrix} = 
\begin{bmatrix} I \\ G \end{bmatrix} \theta + 
\begin{bmatrix} e \\ \varepsilon \end{bmatrix}
}{[x; g] = [I; G] theta + [e; epsilion]}
où
\itemize{
\item \eqn{x} est le vecteur des valeurs initiales des séries composantes.
\item \eqn{\theta} est le vecteur des valeurs finales (réconciliées) des séries composantes.
\item \eqn{e \sim \left( 0, V_e \right)}{e ~ (0, V_e)} est le vecteur des erreurs de mesure de \eqn{x} avec la matrice de
covariance \eqn{V_e = \mathrm{diag} \left( c_x x \right)}{V_e = diag(c_x x)}, ou \eqn{V_e = \mathrm{diag} \left( \left| 
c_x x \right| \right)}{V_e = diag(|c_x x|)} quand l'argument \code{Vmat_option = 2}, où \eqn{c_x} est le vecteur des
coefficients d'alterabilité de \eqn{x}.
\item \eqn{g} est le vecteur des totaux de contrôle initiaux, incluant les totaux temporels des séries composantes (le cas
échéant).
\item \eqn{\varepsilon \sim (0, V_\varepsilon)}{epsilon ~ (0, V_epsilon)} est le vecteur des erreurs de mesure de \eqn{g}
avec la matrice de covariance \eqn{V_\varepsilon = \mathrm{diag} \left( c_g g \right)}{V_epsilion = diag(c_g g)}, ou
\eqn{V_\varepsilon = \mathrm{diag} \left( \left| c_g g \right| \right)}{V_epsilon = diag(|c_g g|)} quand l'argument
\code{Vmat_option = 2}, où \eqn{c_g} est le vecteur des coefficients d'alterabilité de \eqn{g}.
\item \eqn{G} est la matrice des contraintes d'agrégation, y compris les contraintes temporelles implicites (le cas échéant).
}

La solution généralisée des moindres carrés est :
\deqn{\displaystyle 
\hat{\theta} = x + V_e G^{\mathrm{T}} \left( G V_e G^{\mathrm{T}} + V_\varepsilon \right)^+ \left( g - G x \right)
}{theta^hat = x + V_e G' (G V_e G' + V_epsilion)^{+} (g - G x)}
où \eqn{A^{+}} désigne l'inverse de Moore-Penrose de la matrice \eqn{A}.

\code{\link[=tsraking]{tsraking()}} résout un seul problème de ratissage à la fois, c'est-à-dire, soit une seule période du système de séries
chronologiques, ou un seul groupe temporel (ex., toutes les périodes d'une année donnée) lorsque la préservation des
totaux temporels est requise. Plusieurs appels à \code{\link[=tsraking]{tsraking()}} sont donc nécessaires pour réconcilier toutes les
périodes du système de séries chronologiques. \code{\link[=tsraking_driver]{tsraking_driver()}} peut réaliser cela en un seul appel : il détermine
commodément l'ensemble des problèmes à résoudre et génère à l'interne les appels individuels à \code{\link[=tsraking]{tsraking()}}.
\subsection{Coefficients d'altérabilité}{

Les coefficients d'altérabilité \eqn{c_x} et \eqn{c_g} représentent conceptuellement les erreurs de mesure associées aux
valeurs d'entrée des séries composantes \eqn{x} et des totaux de contrôle \eqn{g} respectivement. Il s'agit de nombres réels
non négatifs qui, en pratique, spécifient l'ampleur de la modification permise d'une valeur initiale par rapport aux autres
valeurs. Un coefficients d'altérabilité de \eqn{0.0} définit une valeur fixe (contraignante), tandis qu'un coefficient
d'altérabilité supérieur à \eqn{0.0} définit une valeur libre (non contraignante). L'augmentation du coefficient
d'altérabilité d'une valeur initiale entraîne davantage de changements pour cette valeur dans les données réconciliées (en
sortie) et, inversement, moins de changements lorsque l'on diminue le coefficient d'altérabilité. Les coefficients
d'altérabilité par défaut sont \eqn{1.0} pour les valeurs des séries composantes et \eqn{0.0} pour les totaux de contrôle
transversaux et, le cas échéant, les totaux temporels des séries composantes. Ces coefficients d'altérabilité par défaut
entraînent une répartition proportionnelle des écarts entre les séries composantes. En fixant les coefficients d'altérabilité
des séries composantes à l'inverse des valeurs initiales des séries composantes, on obtiendrait une répartition uniforme des
écarts à la place. Des totaux \emph{presque contraignants} peuvent être obtenus en pratique en spécifiant des coefficients
d'altérabilité très petits (presque \eqn{0.0}) par rapport à ceux des séries composantes (non contraignantes).

\strong{La préservation des totaux temporels} fait référence au fait que les totaux temporels, le cas échéant, sont
généralement conservés « aussi près que possible » de leur valeur initiale. Une \emph{préservation pure} est obtenue par
défaut avec des totaux temporels contraignants, tandis que le changement est minimisé avec des totaux temporels non
contraignants (conformément à l'ensemble de coefficients d'altérabilité utilisés).
}

\subsection{Arguments \code{Vmat_option} et \code{warnNegInput}}{

Ces arguments permettent une gestion alternative des valeurs négatives dans les données d'entrée, similaire à celle de
\code{\link[=tsbalancing]{tsbalancing()}}. Leurs valeurs par défaut correspondent au comportement de G-Séries 2.0 (PROC TSRAKING en
SAS\eqn{^\circledR}{®}) pour lequel des options équivalentes ne sont pas définies. Ce dernier a été développé en présumant
des « données d'entrée non négatives uniquement », à l'instar de PROC BENCHMARKING dans G-Séries 2.0 en
SAS\eqn{^\circledR}{®} qui n'autorisait pas non plus les valeurs négatives avec l'étalonnage proportionnel, ce qui explique
l'avertissement « suspicious use of proportional raking » (\emph{utilisation suspecte du ratissage proportionnel}) en présence
de valeurs négatives avec PROC TSRAKING dans G-Series 2.0 et lorsque \code{warnNegInput = TRUE} (par défault). Cependant, le
ratissage (proportionnel) en présence de valeurs négatives fonctionne généralement bien avec \code{Vmat_option = 2} et produit
des solutions raisonnables et intuitives. Par exemple, alors que l'option par défaut \code{Vmat_option = 1} échoue à résoudre
la contrainte \code{A + B = C} avec les données d'entrée \code{A = 2}, \code{B = -2}, \code{C = 1} et les coefficients d'altérabilité par défaut,
\code{Vmat_option = 2} renvoie la solution (intuitive) \code{A = 2.5}, \code{B = -1.5}, \code{C = 1} (augmentation de 25\% pour \code{A} et \code{B}). Voir
Ferland (2016) pour plus de détails.
}

\subsection{Traitement des valeurs manquantes (\code{NA})}{

Une valeur manquante dans le \emph{data frame} des données d'entrée (argument \code{data_df}) ou dans le \emph{data frame} des
coefficients d'altérabilité (argument \code{alterability_df}) pour n'importe quelle donnée du problème de ratissage (variables
énumérées dans le \emph{data frame} des métadonnées avec l'argument \code{metadata_df}) générera un message d'erreur et arrêtera
l'exécution de la fonction.
}
}
\section{Comparaison de \code{\link[=tsraking]{tsraking()}} et \code{\link[=tsbalancing]{tsbalancing()}}}{
\itemize{
\item \code{\link[=tsraking]{tsraking()}} est limitée aux problèmes de ratissage (« \emph{raking} ») de tables d'agrégation unidimensionnelles et
bidimensionnelles (avec préservation des totaux temporels si nécessaire) alors que \code{\link[=tsbalancing]{tsbalancing()}} traite des problèmes
d'équilibrage plus généraux (ex., des problèmes de ratissage de plus grande dimension, solutions non négatives,
contraintes linéaires générales d'égalité et d'inégalité par opposition à des règles d'agrégation uniquement, etc.)
\item \code{\link[=tsraking]{tsraking()}} renvoie la solution des moindres carrés généralisés du modèle de ratissage basé sur la régression de
Dagum et Cholette (Dagum et Cholette 2006) tandis que \code{\link[=tsbalancing]{tsbalancing()}} résout le problème de minimisation quadratique
correspondant à l'aide d'un solveur numérique. Dans la plupart des cas, la \emph{convergence vers le minimum} est atteinte
et la solution de \code{\link[=tsbalancing]{tsbalancing()}} correspond à la solution (exacte) des moindres carrés de \code{\link[=tsraking]{tsraking()}}. Cela peut ne
pas être le cas, cependant, si la convergence n'a pas pu être atteinte après un nombre raisonnable d'itérations. Cela
dit, ce n'est qu'en de très rares occasions que la solution de \code{\link[=tsbalancing]{tsbalancing()}} différera \emph{significativement} de celle
de \code{\link[=tsraking]{tsraking()}}.
\item \code{\link[=tsbalancing]{tsbalancing()}} est généralement plus rapide que \code{\link[=tsraking]{tsraking()}}, en particulier pour les gros problèmes de ratissage,
mais est généralement plus sensible à la présence de (petites) incohérences dans les données d'entrée associées aux
contraintes redondantes des problèmes de ratissage \emph{entièrement spécifiés} (ou surspécifiés). \code{\link[=tsraking]{tsraking()}} gère ces
incohérences en utilisant l'inverse de Moore-Penrose (distribution uniforme à travers tous les totaux contraignants).
\item \code{\link[=tsbalancing]{tsbalancing()}} permet de spécifier des problèmes épars (clairsemés) sous leur forme réduite. Ce n'est pas le cas de
\code{\link[=tsraking]{tsraking()}} où les règles d'agrégation doivent toujours être entièrement spécifiées étant donné qu'un \emph{cube de données
complet}, sans données manquantes, est attendu en entrée (chaque série composante de l'\emph{intérieur du cube} doit
contribuer à toutes les dimensions du cube, c.-à-d., à chaque série totale des \emph{faces extérieures du cube}).
\item Les deux outils traitent différemment les valeurs négatives dans les données d'entrée par défaut. Alors que les
solutions des problèmes de ratissage obtenues avec \code{\link[=tsbalancing]{tsbalancing()}} et \code{\link[=tsraking]{tsraking()}} sont identiques lorsque tous les
points de données d'entrée sont positifs, elles seront différentes si certains points de données sont négatifs (à
moins que l'argument \code{Vmat_option = 2} ne soit spécifié avec \code{\link[=tsraking]{tsraking()}}).
\item Alors que \code{\link[=tsbalancing]{tsbalancing()}} et \code{\link[=tsraking]{tsraking()}} permettent toutes les deux de préserver les totaux temporels, la gestion
du temps n'est pas incorporée dans \code{\link[=tsraking]{tsraking()}}. Par exemple, la construction des groupes de traitement (ensembles de
périodes de chaque problème de ratissage) est laissée à l'utilisateur avec \code{\link[=tsraking]{tsraking()}} et des appels séparés doivent
être soumis pour chaque groupe de traitement (chaque problème de ratissage). De là l'utilité de la fonction
d'assistance \code{\link[=tsraking_driver]{tsraking_driver()}} pour \code{\link[=tsraking]{tsraking()}}.
\item \code{\link[=tsbalancing]{tsbalancing()}} renvoie le même ensemble de séries que l'objet d'entrée de type série chronologique (argument
\code{in_ts}) alors que \code{\link[=tsraking]{tsraking()}} renvoie l'ensemble des séries impliquées dans le problème de ratissage plus celles
spécifiées avec l'argument \code{id} (qui pourrait correspondre à un sous-ensemble des séries d'entrée).
}
}

\examples{
###########
# Exemple 1 : Problème simple de ratissage à une dimension dans lequel les valeurs des 
#             `autos` et des `camions` doivent être égales à la valeur du `total`.

# Métadonnées du problème
mes_meta1 <- data.frame(series = c("autos", "camions"),
                        total1 = c("total", "total"))
mes_meta1

# Données du problème
mes_series1 <- data.frame(autos = 25, camions = 5, total = 40)

# Réconcilier les données
res_ratis1 <- tsraking(mes_series1, mes_meta1)

# Données initiales
mes_series1

# Données réconciliées
res_ratis1

# Vérifier les contraintes transversales en sortie
all.equal(rowSums(res_ratis1[c("autos", "camions")]), res_ratis1$total)

# Vérifier le total de contrôle (fixe)
all.equal(mes_series1$total, res_ratis1$total)


###########
# Exemple 2 : problème de ratissage à 2 dimensions similaire au 1er exemple mais 
#             en ajoutant les ventes régionales pour les 3 provinces des prairies 
#             (Alb., Sask. et Man.) et où les ventes de camions en Sask. ne sont 
#             pas modifiables (coefficient d'altérabilité = 0), avec `quiet = TRUE` 
#             pour éviter l'affichage de l'en-tête de la fonction.

# Métadonnées du problème
mes_meta2 <- data.frame(series = c("autos_alb", "autos_sask", "autos_man",
                                   "camions_alb", "camions_sask", "camions_man"),
                        total1 = c(rep("total_autos", 3),
                                   rep("total_camions", 3)),
                        total2 = rep(c("total_alb", "total_sask", "total_man"), 2))

# Données du problème
mes_series2 <- data.frame(autos_alb = 12, autos_sask = 14, autos_man = 13,
                          camions_alb = 20, camions_sask = 20, camions_man = 24,
                          total_alb = 30, total_sask = 31, total_man = 32,
                          total_autos = 40, total_camions = 53)

# Réconcilier les données
res_ratis2 <- tsraking(mes_series2, mes_meta2,
                       alterability_df = data.frame(camions_sask = 0),
                       quiet = TRUE)

# Données initiales
mes_series2

# Données réconciliées
res_ratis2

# Vérifier les contraintes transversales en sortie
all.equal(rowSums(res_ratis2[c("autos_alb", "autos_sask", "autos_man")]), res_ratis2$total_autos)
all.equal(rowSums(res_ratis2[c("camions_alb", "camions_sask", "camions_man")]), res_ratis2$total_camions)
all.equal(rowSums(res_ratis2[c("autos_alb", "camions_alb")]), res_ratis2$total_alb)
all.equal(rowSums(res_ratis2[c("autos_sask", "camions_sask")]), res_ratis2$total_sask)
all.equal(rowSums(res_ratis2[c("autos_man", "camions_man")]), res_ratis2$total_man)

# Vérifier le total de contrôle (fixe)
cols_tot <- union(unique(mes_meta2$total1), unique(mes_meta2$total2))
all.equal(mes_series2[cols_tot], res_ratis2[cols_tot])

# Vérifier la valeur des camions en Saskatchewan (fixée à 20)
all.equal(mes_series2$camions_sask, res_ratis2$camions_sask)
}
\references{
Bérubé, J. and S. Fortier (2009). « PROC TSRAKING: An in-house SAS\eqn{^\circledR}{®} procedure for balancing
time series ». Dans \strong{JSM Proceedings, Business and Economic Statistics Section}. Alexandria, VA: American Statistical
Association.

Dagum, E. B. and P. Cholette (2006). \strong{Benchmarking, Temporal Distribution and Reconciliation Methods
of Time Series}. Springer-Verlag, New York, Lecture Notes in Statistics, Vol. 186.

Ferland, M. (2016). « Negative Values with PROC TSRAKING ». \strong{Document interne}. Statistique Canada, Ottawa,
Canada.

Fortier, S. and B. Quenneville (2009). « Reconciliation and Balancing of Accounts and Time Series ».
Dans \strong{JSM Proceedings, Business and Economic Statistics Section}. Alexandria, VA: American Statistical Association.

Quenneville, B. and S. Fortier (2012). « Restoring Accounting Constraints in Time Series – Methods and
Software for a Statistical Agency ». \strong{Economic Time Series: Modeling and Seasonality}. Chapman & Hall, New York.

Statistique Canada (2016). « La procédure TSRAKING ». \strong{Guide de l'utilisateur de G-Séries 2.0}.
Statistique Canada, Ottawa, Canada.

Statistique Canada (2018). \strong{Théorie et application de la réconciliation (Code du cours 0437)}.
Statistique Canada, Ottawa, Canada.
}
\seealso{
\code{\link[=tsraking_driver]{tsraking_driver()}} \code{\link[=tsbalancing]{tsbalancing()}} \code{\link[=rkMeta_to_blSpecs]{rkMeta_to_blSpecs()}} \code{\link[=gs.gInv_MP]{gs.gInv_MP()}} \code{\link[=build_raking_problem]{build_raking_problem()}} \link{aliases}
}
