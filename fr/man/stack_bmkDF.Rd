% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stack_bmkDF.R
\name{stack_bmkDF}
\alias{stack_bmkDF}
\title{Empiler des « données étalon »}
\usage{
stack_bmkDF(
  bmk_df,
  ser_cName = "series",
  startYr_cName = "startYear",
  startPer_cName = "startPeriod",
  endYr_cName = "endYear",
  endPer_cName = "endPeriod",
  val_cName = "value",
  keep_NA = FALSE
)
}
\arguments{
\item{bmk_df}{(obligatoire)

\emph{Data frame}, ou objet compatible, qui contient les étalons multivariés à empiler.}

\item{ser_cName}{(optionnel)

Chaîne de caractères spécifiant le nom de la variable (colonne) du \emph{data frame} empilé de sortie qui contiendra
les nom des étalons (nom des variables d'étalons dans le \emph{data frame} d'étalons multivariés d'entrée). Cette variable
peut ensuite être utilisée comme variable de groupes-BY (argument \code{by}) avec les fonctions d'étalonnage.

\strong{La valeur par défaut} est \code{ser_cName = "series"}.}

\item{startYr_cName, startPer_cName, endYr_cName, endPer_cName}{(optionnel)

Chaînes de caractères spécifiant le nom des variables (colonnes) numériques du \emph{data frame} d'étalons multivariés d'entrée
qui définissent la couverture des étalons, c'est-à-dire les identificateurs de l'année et de la période (cycle) de début et
de fin des étalons. Ces variables sont \emph{transférées} dans le \emph{data frame} empilé de sortie avec les mêmes noms de variable.

\strong{Les valeurs par défaut} sont \code{startYr_cName = "startYear"}, \code{startPer_cName = "startPeriod"}
\code{endYr_cName = "endYear"} et \code{endPer_Name = "endPeriod"}.}

\item{val_cName}{(optionnel)

Chaîne de caractères spécifiant le nom de la variable (colonne) du \emph{data frame} empilé de sortie qui contiendra
les valeurs des étalons.

\strong{La valeur par défaut} est \code{val_cName = "value"}.}

\item{keep_NA}{(optionnel)

Argument logique (\emph{logical}) spécifiant si les valeurs d'étalon manquantes (\code{NA}) du \emph{data frame} d'étalons multivariés
d'entrée doivent être conservées dans le \emph{data frame} empilé de sortie.

\strong{La valeur par défaut} est \code{keep_NA = FALSE}.}
}
\value{
La fonction renvoie un \emph{data frame} avec six variables :
\itemize{
\item Nom de l'étalon (de la série), type caractère (voir l'argument \code{ser_cName})
\item Année de début de la couverture de l'étalon, type numérique (voir argument \code{startYr_cName})
\item Période de début de la couverture de l'étalon, type numérique (voir argument \code{startPer_cName})
\item Année de fin de la couverture de l'étalon, type numérique (voir argument \code{endtYr_cName})
\item Période de fin de la couverture de l'étalon, type numérique (voir argument \code{endPer_cName})
\item Valeur de l'étalon, type numérique (voir argument \code{val_cName})
}

Note : la fonction renvoie un objet « data.frame » qui peut être explicitement converti en un autre
type d'objet avec la fonction \verb{as*()} appropriée (ex., \code{tibble::as_tibble()} le convertirait en tibble).
}
\description{
Convertir un \emph{data frame} d'étalons multivariés (voir \code{\link[=ts_to_bmkDF]{ts_to_bmkDF()}}) pour les fonctions d'étalonnage
(\code{\link[=benchmarking]{benchmarking()}} et \code{\link[=stock_benchmarking]{stock_benchmarking()}}) en un \emph{data frame} empilé (long) avec six variables (colonnes) :
\itemize{
\item une (1) pour le nom de l'étalon (ex., nom de série)
\item quatre (4) pour la converture de l'étalon
\item une (1) pour la valeur de l'étalon
}

Les valeurs d'étalon manquantes (\code{NA}) ne sont pas incluses par défaut dans le \emph{data frame} empilé renvoyé par
la fonction. Spécifiez l'argument \code{keep_NA = TRUE} pour les conserver.

Cette fonction est utile lorsque l'on souhaite utiliser l'argument \code{by} (mode de traitement \emph{groupes-BY}) des
fonctions d'étalonnage afin d'étalonner plusieurs séries en un seul appel de fonction.
}
\examples{
# Créer un « data frame » d'étalons annuels pour 2 séries indicatrices trimestrielles 
# (avec des valeurs manquantes pour les étalons des 2 dernières années)
mes_etalons <- ts_to_bmkDF(ts(data.frame(ser1 = c(1:3 *  10, NA, NA), 
                                         ser2 = c(1:3 * 100, NA, NA)),
                              start = c(2019, 1), frequency = 1),
                           ind_frequency = 4)
mes_etalons


# Empiler les étalons ...

# en rejetant les `NA` dans les données empilées (comportement par défaut)
stack_bmkDF(mes_etalons)

# en conservant les `NA` dans les données empilées
stack_bmkDF(mes_etalons, keep_NA = TRUE)

# en utilisant des noms de variables (colonnes) personnalisés
stack_bmkDF(mes_etalons, ser_cName = "nom_eta", val_cName = "val_eta")
}
\seealso{
\code{\link[=stack_tsDF]{stack_tsDF()}} \code{\link[=ts_to_bmkDF]{ts_to_bmkDF()}} \code{\link[=benchmarking]{benchmarking()}} \code{\link[=stock_benchmarking]{stock_benchmarking()}}
}
