% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_benchAdj.R
\name{plot_benchAdj}
\alias{plot_benchAdj}
\title{Tracer les ajustements d'étalonnage}
\usage{
plot_benchAdj(
  PB_graphTable = NULL,
  SB_graphTable = NULL,
  SB_splineKnots = NULL,
  legendPos = "bottomright"
)
}
\arguments{
\item{PB_graphTable}{(optionnel)

\emph{Data frame}, ou objet compatible, correspondant au \emph{data frame} de sortie \code{graphTable} de la fonction \code{\link[=benchmarking]{benchmarking()}} (PB pour
approche « Proc Benchmarking »). Spécifiez \code{NULL} pour ne pas inclure les ajustements de \code{\link[=benchmarking]{benchmarking()}} dans le graphique.

\strong{La valeur par défaut} est \code{PB_graphTable = NULL}.}

\item{SB_graphTable}{(optionnel)

\emph{Data frame}, ou objet compatible, correspondant au \emph{data frame} de sortie \code{graphTable} de la fonction \code{\link[=stock_benchmarking]{stock_benchmarking()}}
(SB). Spécifiez \code{NULL} pour ne pas inclure les ajustements de \code{\link[=stock_benchmarking]{stock_benchmarking()}} dans le graphique.

\strong{La valeur par défaut} est \code{SB_graphTable = NULL}.}

\item{SB_splineKnots}{(optionnel)

\emph{Data frame}, ou objet compatible, correspondant au \emph{data frame} de sortie \code{splineKnots} de la fonction \code{\link[=stock_benchmarking]{stock_benchmarking()}}
(SB). Spécifiez \code{NULL} pour ne pas inclure la spline cubique de \code{\link[=stock_benchmarking]{stock_benchmarking()}} dans le graphique.

\strong{La valeur par défaut} est \code{SB_splineKnots = NULL}.}

\item{legendPos}{(optionnel)

Chaîne de caractères (mot-clé) spécifiant l'emplacement de la légende dans le graphique. Voir la description de l'argument \code{x}
dans la documentation de \code{graphics::legend()} pour la liste des mots-clés valides. Spécifiez \code{NULL} pour ne pas inclure de
légende dans le graphique.

\strong{La valeur par défaut} est \code{legendPos = "bottomright"} (en bas à droite).}
}
\value{
Cette fonction ne renvoie rien (\code{invisible(NULL)}).
}
\description{
Tracer les ajustements d'étalonnage pour une série unique dans le périphérique graphique courant (actif). Il est possible
de superposer jusqu'à trois types d'ajustements dans le même graphique :
\itemize{
\item Ajustements générés par la fonction \code{\link[=benchmarking]{benchmarking()}}
\item Ajustements générés par la fonction \code{\link[=stock_benchmarking]{stock_benchmarking()}}
\item Spline cubique associée aux ajustements générés par la fonction \code{\link[=stock_benchmarking]{stock_benchmarking()}}
}

Ces graphiques peuvent être utiles pour évaluer la qualité des résultats d'étalonnage et comparer les ajustements générés par
les deux fonctions d'étalonnage (\code{\link[=benchmarking]{benchmarking()}} et \code{\link[=stock_benchmarking]{stock_benchmarking()}}) pour des séries de stocks.
}
\details{
Variables du \emph{data frame} \code{graphTable} (arguments \code{PB_graphTable} et \code{SB_graphTable}) utilisées dans le graphique :
\itemize{
\item \code{t} pour l'axe des x (\emph{t})
\item \code{benchmarkedSubAnnualRatio} pour les lignes \emph{Stock Bench. (SB)} et \emph{Proc Bench. (PB)}
\item \code{bias} pour la ligne \emph{Bias} (lorsque \eqn{\rho < 1})
}

Variables du \emph{data frame} \code{splineKnots} (argument \code{SB_splineKnots}) utilisées dans le graphique :
\itemize{
\item \code{x} pour l'axe des x (\emph{t})
\item \code{y} pour la ligne \emph{Cubic spline} et les points \emph{Extra knot} et \emph{Original knot}
\item \code{extraKnot} pour le type de nœud (\emph{Extra knot} contre \emph{Original knot})
}

Voir la section \strong{Valeur de retour} de \code{\link[=benchmarking]{benchmarking()}} et \code{\link[=stock_benchmarking]{stock_benchmarking()}} pour plus d'informations sur ces
\emph{data frames}.
}
\examples{
#######
# Étapes préliminaires

# Stocks trimestriels (même patron répété pour 7 années)
sc_tri <- ts(rep(c(85, 95, 125, 95), 7), start = c(2013, 1), frequency = 4)

# Stocks de fin d'année
sc_ann <- ts(c(135, 125, 155, 145, 165), start = 2013, frequency = 1)

# Étalonnage proportionnel
# ... avec `benchmarking()` (approche "Proc Benchmarking")
res_PB <- benchmarking(
  ts_to_tsDF(sc_tri), 
  ts_to_bmkDF(sc_ann, discrete_flag = TRUE, alignment = "e", ind_frequency = 4),
  rho = 0.729, lambda = 1, biasOption = 3,
  quiet = TRUE)
# ... avec `stock_benchmarking()`
res_SB <- stock_benchmarking(
  ts_to_tsDF(sc_tri), 
  ts_to_bmkDF(sc_ann, discrete_flag = TRUE, alignment = "e", ind_frequency = 4),
  rho = 0.729, lambda = 1, biasOption = 3,
  quiet = TRUE)


#######
# Tracer les ajustements d'étalonnage

# Ajustements de `benchmarking()` (`res_PB`), sans légende
plot_benchAdj(PB_graphTable = res_PB$graphTable,
              legendPos = NULL)

# Ajouter les de `stock_benchmarking()` (`res_SB`), avec une légende cette fois
plot_benchAdj(PB_graphTable = res_PB$graphTable,
              SB_graphTable = res_SB$graphTable)

# Ajouter la spline cubique de `stock_benchmarking()` utilisée pour générer les ajustements
# (incluant les nœuds supplémentaires aux deux extrémités), avec légende en haut à gauche
plot_benchAdj(PB_graphTable = res_PB$graphTable,
              SB_graphTable = res_SB$graphTable,
              SB_splineKnots = res_SB$splineKnots,
              legendPos = "topleft")


#######
# Simuler l'étalonnage de plusieurs séries (3 séries de stocks)

sc_tri2 <- ts.union(ser1 = sc_tri, ser2 = sc_tri * 100, ser3 = sc_tri * 10)
sc_ann2 <- ts.union(ser1 = sc_ann, ser2 = sc_ann * 100, ser3 = sc_ann * 10)

# Avec l'argument `allCols = TRUE` (stocks identifiés avec la colonne `varSeries`)
res_SB2 <- stock_benchmarking(
  ts_to_tsDF(sc_tri2),
  ts_to_bmkDF(sc_ann2, discrete_flag = TRUE, alignment = "e", ind_frequency = 4),
  rho = 0.729, lambda = 1, biasOption = 3,
  allCols = TRUE,
  quiet = TRUE)

# Ajustements d'étalonnage pour le 2ième stock (ser2)
plot_benchAdj(
  SB_graphTable = res_SB2$graphTable[res_SB2$graphTable$varSeries == "ser2", ])

# Avec l'argument `by = "series"` (stocks identifiés avec la colonne `series`)
res_SB3 <- stock_benchmarking(
  stack_tsDF(ts_to_tsDF(sc_tri2)),
  stack_bmkDF(ts_to_bmkDF(
    sc_ann2, discrete_flag = TRUE, alignment = "e", ind_frequency = 4)),
  rho = 0.729, lambda = 1, biasOption = 3,
  by = "series",
  quiet = TRUE)

# Spline cubique pour le 3ième stock (ser3)
plot_benchAdj(
  SB_splineKnots = res_SB3$splineKnots[res_SB3$splineKnots$series == "ser3", ])
}
\seealso{
\code{\link[=plot_graphTable]{plot_graphTable()}} \link{bench_graphs} \code{\link[=benchmarking]{benchmarking()}} \code{\link[=stock_benchmarking]{stock_benchmarking()}}
}
